local s_Label = os.getComputerLabel()
if(s_Label == nil) then
    print("No label set. Copying Startup Data.")
    fs.copy("disk/startup", "/startup")
    fs.copy("disk/PowNet", "/PowNet")
    return
end

local monitor
function Log(p_Message, p_Color)
    print(p_Message)
    if(peripheral.getType("left") == "monitor" ) then
        monitor = peripheral.wrap("left")
    end
    if(monitor ~= nil) then

        monitor.clear()
        monitor.setCursorPos(1,1)
        monitor.setTextScale(1.5)
        if(p_Color == nil) then
            p_Color = colors.white
        end
        monitor.setTextColor(p_Color)
        monitor.write(p_Message)
        monitor.setTextColor(colors.white)

    end
end

function SetStatus(p_Message, p_Color)
    print(p_Message)
    if(peripheral.getType("left") == "monitor" ) then
        monitor = peripheral.wrap("left")
    end
    if(monitor ~= nil) then

        monitor.clear()
        monitor.setCursorPos(1,1)
        monitor.setTextScale(1.5)
        if(p_Color == nil) then
            p_Color = colors.white
        end
        monitor.setTextColor(p_Color)
        monitor.write(p_Message)
        monitor.setTextColor(colors.white)

    end
end

SetStatus("Booting...")

--MainFrame only
if(s_Label == "MainFrame") then
	shell.setDir("disk")
	shell.run("MainFrame.lua")
    Log("Offline", colors.red)
    return
end

os.loadAPI("PowNet")
SetStatus("Connecting...")
DATA = nil
s_Connected, DATA = PowNet.Connect()

if not s_Connected then
    SetStatus("Offline!", colors.red)
    return
end
SetStatus("Updating")

PowNet.UpdateModule("startup")
PowNet.UpdateModule("PowNet")
PowNet.UpdateModule(s_Label .. ".lua")
SetStatus("Launching!", colors.green)
shell.run(s_Label .. ".lua")
SetStatus("Disconnected!", colors.red)



